version: "3.8"

services:
  backend:
    container_name: backend
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "${SERVER_PORT:-8080}:${SERVER_PORT:-8080}"
    environment:
      - TZ=America/Sao_Paulo
      - SERVER_PORT=${SERVER_PORT:-8080}
      - PROFILE=${PROFILE:-dev}
      - DATASOURCE_URL=${DATASOURCE_URL:-jdbc:postgresql://postgres:5432/recipes}
      - DATASOURCE_USERNAME=${DATASOURCE_USERNAME:-admin}
      - DATASOURCE_PASSWORD=${DATASOURCE_PASSWORD:-admin}
      - REDIS_HOST=${REDIS_HOST:-redis}
      - REDIS_PORT=${REDIS_PORT:-6379}
      - REDIS_PASSWORD=${REDIS_PASSWORD:-admin}
      - EMAIL_HOST=${EMAIL_HOST:-smtp.gmail.com}
      - EMAIL_PORT=${EMAIL_PORT:-587}
      - EMAIL_USERNAME=${EMAIL_USERNAME}
      - EMAIL_PASSWORD=${EMAIL_PASSWORD}
      - API_BASE_URL=${API_BASE_URL:-http://localhost:${SERVER_PORT:-8080}/api/v1}
      - FRONTEND_BASE_URL=${FRONTEND_BASE_URL:-http://localhost:5173}
      - ACCESS_TOKEN_EXPIRATION=${ACCESS_TOKEN_EXPIRATION:-5}
      - REFRESH_TOKEN_EXPIRATION=${REFRESH_TOKEN_EXPIRATION:-10080}
    healthcheck:
      test:
        [
          "CMD",
          "curl",
          "-f",
          "${API_BASE_URL:-http://localhost:${SERVER_PORT:-8080}}/api/v1/actuator/health"
        ]
      interval: 10s
      timeout: 10s
      retries: 3
      start_period: 10s
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - app-network

  postgres:
    container_name: database
    image: postgres:16-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: recipes
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d recipes"]
      interval: 5s
      timeout: 5s
      retries: 10
    networks:
      - app-network

  redis:
    container_name: cache
    image: redis:7.4.2-alpine
    ports:
      - "6379:6379"
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD:-admin}
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping"]
      interval: 5s
      timeout: 5s
      retries: 10
    networks:
      - app-network

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge
